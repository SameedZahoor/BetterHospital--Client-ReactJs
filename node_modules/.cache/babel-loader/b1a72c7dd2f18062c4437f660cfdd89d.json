{"ast":null,"code":"var _jsxFileName = \"F:\\\\6th Semester\\\\Web Programming\\\\Project\\\\Qovex_React_v1.0.0\\\\Admin\\\\src\\\\pages\\\\ViewDoctor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Breadcrumbs from \"../../src/components/Common/Breadcrumb\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, CardTitle, CardSubtitle, Label, Input, InputGroup, CardImg, CardText, CardHeader, CardImgOverlay, CardFooter, CardDeck, CardColumns, CardGroup } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\"; //import img2 from \"../../assets/images/small/img-2.jpg\"\n\nimport img2 from \"../../src/assets/images/small/img-2.jpg\"; // Importing the Doctor Card to display the searched doctor\n\nimport DoctorCard from \"./DoctorCard/DoctorCard\"; // Demo data for displaying the searched doctor\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar doctordemoinfo = {\n  firstname: \"Zohaib\",\n  lastname: \"Iqbal\",\n  CNIC: \"33100-1234567-1\",\n  phone: \"03008667620\",\n  age: \"29\",\n  gender: \"Male\",\n  dob: \"2018-8-3\"\n};\n\nconst ViewDoctor = () => {\n  _s();\n\n  // States for Input fields...\n  // Will be shared to the backend via axios\n  const [doctorid, setDoctorid] = useState(null);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (doctorid != null) {\n      console.table(doctorid);\n    } else {\n      alert(\"Doctor Id Required.\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: \"Doctors\",\n        breadcrumbItem: \"View Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: \" View Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: \"Enter the id to View the information required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                className: \"needs-validation\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"firstname\",\n                        placeholder: \"Id..\",\n                        onChange: e => setDoctorid(e.target.value),\n                        type: \"text\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary waves-effect waves-light\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"bx bx-search-alt font-size-16 align-middle me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 25\n                      }, this), \" \", \"Search\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DoctorCard, {\n          props: doctordemoinfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewDoctor, \"aQPByuinwWeN+qAeAdJqGOtDAaI=\");\n\n_c = ViewDoctor;\nexport default ViewDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDoctor\");","map":{"version":3,"sources":["F:/6th Semester/Web Programming/Project/Qovex_React_v1.0.0/Admin/src/pages/ViewDoctor.jsx"],"names":["React","useState","Breadcrumbs","Row","Col","Card","CardBody","FormGroup","Button","CardTitle","CardSubtitle","Label","Input","InputGroup","CardImg","CardText","CardHeader","CardImgOverlay","CardFooter","CardDeck","CardColumns","CardGroup","AvForm","AvField","Link","img2","DoctorCard","doctordemoinfo","firstname","lastname","CNIC","phone","age","gender","dob","ViewDoctor","doctorid","setDoctorid","handleSubmit","e","preventDefault","console","table","alert","target","value","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Breadcrumbs from \"../../src/components/Common/Breadcrumb\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  CardImg,\r\n  CardText,\r\n  CardHeader,\r\n  CardImgOverlay,\r\n  CardFooter,\r\n  CardDeck,\r\n  CardColumns,\r\n  CardGroup,\r\n} from \"reactstrap\";\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\nimport { Link } from \"react-router-dom\";\r\n//import img2 from \"../../assets/images/small/img-2.jpg\"\r\nimport img2 from \"../../src/assets/images/small/img-2.jpg\";\r\n\r\n// Importing the Doctor Card to display the searched doctor\r\nimport DoctorCard from \"./DoctorCard/DoctorCard\";\r\n\r\n// Demo data for displaying the searched doctor\r\nvar doctordemoinfo = {\r\n  firstname: \"Zohaib\",\r\n  lastname: \"Iqbal\",\r\n  CNIC: \"33100-1234567-1\",\r\n  phone: \"03008667620\",\r\n  age: \"29\",\r\n  gender: \"Male\",\r\n  dob: \"2018-8-3\",\r\n};\r\n\r\nconst ViewDoctor = () => {\r\n  // States for Input fields...\r\n  // Will be shared to the backend via axios\r\n  const [doctorid, setDoctorid] = useState(null);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (doctorid != null) {\r\n      console.table(doctorid);\r\n    } else {\r\n      alert(\"Doctor Id Required.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title=\"Doctors\" breadcrumbItem=\"View Doctor\" />\r\n\r\n        <Row>\r\n          <Col xl=\"4\">\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"card-title\"> View Doctor</h4>\r\n                <p className=\"card-title-desc\">\r\n                  Enter the id to View the information required.\r\n                </p>\r\n\r\n                <AvForm className=\"needs-validation\">\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <AvField\r\n                          name=\"firstname\"\r\n                          placeholder=\"Id..\"\r\n                          onChange={(e) => setDoctorid(e.target.value)}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom01\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary waves-effect waves-light\"\r\n                      >\r\n                        <i class=\"bx bx-search-alt font-size-16 align-middle me-2\"></i>{\" \"}\r\n                        Search\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <DoctorCard props={doctordemoinfo} />\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewDoctor;\r\n"]},"metadata":{},"sourceType":"module"}