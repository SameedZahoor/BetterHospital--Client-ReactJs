{"ast":null,"code":"var _jsxFileName = \"F:\\\\6th Semester\\\\Web Programming\\\\Project\\\\Qovex_React_v1.0.0\\\\Admin\\\\src\\\\pages\\\\AdmitPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Breadcrumbs from \"../../src/components/Common/Breadcrumb\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, CardTitle, CardSubtitle, Label, Input, InputGroup } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport Select from \"react-select\"; //import img4 from \"../../assets/images/small/img-4.jpg\"\n\nimport img4 from \"../../src/assets/images/small/doctorimg_avatar.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionGroup = [{\n  label: \"Gender\",\n  options: [{\n    label: \"♂️ Male\",\n    value: \"Male\"\n  }, {\n    label: \"♀️ Female\",\n    value: \"Female\"\n  }, {\n    label: \"Others\",\n    value: \"Others\"\n  }]\n}];\nconst optionBachelors = [{\n  label: \"Bs\",\n  options: [{\n    label: \"Bachelor of Medicine and Surgery\",\n    value: \"Bachelor of Medicine and Surgery\"\n  }, {\n    label: \"Bachelor of Dental Surgery\",\n    value: \"Bachelor of Dental Surgery\"\n  }, {\n    label: \"Others\",\n    value: \"Others\"\n  }]\n}];\nconst optionSpecialization = [{\n  label: \"MD\",\n  options: [{\n    label: \"Aerospace Medicine\",\n    value: \"Aerospace Medicine\"\n  }, {\n    label: \"Immunohematology and Blood transfusion\",\n    value: \"Immunohematology and Blood transfusion\"\n  }, {\n    label: \"Others\",\n    value: \"Others\"\n  }]\n}];\n\nconst AdmitPatient = () => {\n  _s();\n\n  // States for Input fields...\n  // Will be shared to the backend via axios\n  const [firstname, setFirstname] = useState(null);\n  const [lastname, setLastname] = useState(null);\n  const [cnic, setCnic] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [age, setAge] = useState(null);\n  const [dob, setDob] = useState(null); // Select Menu that captures Gender in a state..\n\n  const [selectedGroup, setselectedGroup] = useState(null);\n  const [bachelor, setBachelor] = useState(null);\n  const [specialization, setSpecialization] = useState(null);\n\n  function handleSelectGroup(selectedGroup) {\n    console.log(\"captured:\", selectedGroup);\n    setselectedGroup(selectedGroup);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); //console.log(\"Sending data...\",selectedGroup.value);\n\n    console.log(\"Date of Birth = \", dob[0].getMonth(), dob[0].getDate(), dob[0].getFullYear()); //console.table(firstname,lastname,cnic,phone,\"Gender:\",selectedGroup,age,dob);\n  } //for change tooltip display propery\n\n\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\") document.getElementById(eleId).style.display = \"none\";else document.getElementById(eleId).style.display = \"block\";\n  }\n\n  const [profilepic, setProfilepic] = useState(img4);\n\n  const imageHandler = e => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setProfilepic(reader.result); //this.setState({profileImg: reader.result})\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: \"Patient\",\n        breadcrumbItem: \"Admit Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"8\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: \" Bio Information - Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: \"Enter the information given below to admit the patient.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                className: \"needs-validation\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom01\",\n                        children: \"Patient Id\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"firstname\",\n                        placeholder: \"First name\",\n                        onChange: e => setFirstname(e.target.value),\n                        type: \"text\",\n                        errorMessage: \"Enter First Name\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom02\",\n                        children: \"Last name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"lastname\",\n                        placeholder: \"Last name\",\n                        type: \"text\",\n                        onChange: e => setLastname(e.target.value),\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom02\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom01\",\n                        children: \"CNIC -Govt Id\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"firstname\",\n                        placeholder: \"*****-*******-*\",\n                        onChange: e => setCnic(e.target.value),\n                        type: \"text\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom01\",\n                        children: \"Phone No.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"firstname\",\n                        onChange: e => setPhone(e.target.value),\n                        placeholder: \"****-*******\",\n                        type: \"text\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"mb-3\",\n                        name: \"digits\",\n                        label: \"Room Number\",\n                        placeholder: \"21\",\n                        type: \"number\",\n                        onChange: e => setAge(e.target.value),\n                        errorMessage: \"Enter Only Digits\",\n                        validate: {\n                          required: {\n                            value: true\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Only Digits\"\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: \"Gender\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        value: selectedGroup,\n                        onChange: setselectedGroup,\n                        options: optionGroup,\n                        classNamePrefix: \"select2-selection\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: \"Date of Birth\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                        children: /*#__PURE__*/_jsxDEV(Flatpickr, {\n                          value: dob,\n                          onChange: setDob,\n                          className: \"form-control d-block\",\n                          placeholder: \"dd M,yyyy\",\n                          options: {\n                            mode: \"range\",\n                            dateFormat: \"Y-m-d\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 244,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"checkbox\",\n                    value: \"\",\n                    id: \"invalidCheck\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"invalidCheck\",\n                    children: \"Agree to terms and conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: \"You must agree before submitting.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleSubmit,\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdmitPatient, \"6lkH9mUtvNUghHY5ASEVdn0Ke+4=\");\n\n_c = AdmitPatient;\nexport default AdmitPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdmitPatient\");","map":{"version":3,"sources":["F:/6th Semester/Web Programming/Project/Qovex_React_v1.0.0/Admin/src/pages/AdmitPatient.js"],"names":["React","useState","Breadcrumbs","Row","Col","Card","CardBody","FormGroup","Button","CardTitle","CardSubtitle","Label","Input","InputGroup","AvForm","AvField","Flatpickr","Select","img4","optionGroup","label","options","value","optionBachelors","optionSpecialization","AdmitPatient","firstname","setFirstname","lastname","setLastname","cnic","setCnic","phone","setPhone","age","setAge","dob","setDob","selectedGroup","setselectedGroup","bachelor","setBachelor","specialization","setSpecialization","handleSelectGroup","console","log","handleSubmit","e","preventDefault","getMonth","getDate","getFullYear","changeHandeler","event","eleId","target","document","getElementById","style","display","profilepic","setProfilepic","imageHandler","reader","FileReader","onload","readyState","result","readAsDataURL","files","required","pattern","errorMessage","mode","dateFormat"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Breadcrumbs from \"../../src/components/Common/Breadcrumb\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\n\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport Select from \"react-select\";\r\n\r\n//import img4 from \"../../assets/images/small/img-4.jpg\"\r\nimport img4 from \"../../src/assets/images/small/doctorimg_avatar.jpg\";\r\n\r\nconst optionGroup = [\r\n  {\r\n    label: \"Gender\",\r\n    options: [\r\n      { label: \"♂️ Male\", value: \"Male\" },\r\n      { label: \"♀️ Female\", value: \"Female\" },\r\n      { label: \"Others\", value: \"Others\" },\r\n    ],\r\n  },\r\n];\r\n\r\nconst optionBachelors = [\r\n  {\r\n    label: \"Bs\",\r\n    options: [\r\n      { label: \"Bachelor of Medicine and Surgery\", value: \"Bachelor of Medicine and Surgery\" },\r\n      { label: \"Bachelor of Dental Surgery\", value: \"Bachelor of Dental Surgery\" },\r\n      { label: \"Others\", value: \"Others\" },\r\n    ],\r\n  },\r\n];\r\n\r\nconst optionSpecialization = [\r\n  {\r\n    label: \"MD\",\r\n    options: [\r\n      { label: \"Aerospace Medicine\", value: \"Aerospace Medicine\" },\r\n      { label: \"Immunohematology and Blood transfusion\", value: \"Immunohematology and Blood transfusion\" },\r\n      { label: \"Others\", value: \"Others\" },\r\n    ],\r\n  },\r\n];\r\n\r\n\r\nconst AdmitPatient = () => {\r\n  // States for Input fields...\r\n  // Will be shared to the backend via axios\r\n  const [firstname, setFirstname] = useState(null);\r\n  const [lastname, setLastname] = useState(null);\r\n  const [cnic, setCnic] = useState(null);\r\n  const [phone, setPhone] = useState(null);\r\n  const [age, setAge] = useState(null);\r\n  const [dob, setDob] = useState(null);\r\n\r\n  // Select Menu that captures Gender in a state..\r\n  const [selectedGroup, setselectedGroup] = useState(null);\r\n\r\n\r\n  const [bachelor,setBachelor] = useState(null);\r\n  const [specialization,setSpecialization] = useState(null);  \r\n\r\n\r\n  function handleSelectGroup(selectedGroup) {\r\n    console.log(\"captured:\", selectedGroup);\r\n    setselectedGroup(selectedGroup);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"Sending data...\",selectedGroup.value);\r\n    console.log(\r\n      \"Date of Birth = \",\r\n      dob[0].getMonth(),\r\n      dob[0].getDate(),\r\n      dob[0].getFullYear()\r\n    );\r\n    //console.table(firstname,lastname,cnic,phone,\"Gender:\",selectedGroup,age,dob);\r\n  }\r\n\r\n  //for change tooltip display propery\r\n  function changeHandeler(event, eleId) {\r\n    if (event.target.value !== \"\")\r\n      document.getElementById(eleId).style.display = \"none\";\r\n    else document.getElementById(eleId).style.display = \"block\";\r\n  }\r\n\r\n  const [profilepic,setProfilepic]= useState(img4);\r\n\r\n  const imageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () =>{\r\n      if(reader.readyState === 2){\r\n        setProfilepic(reader.result);\r\n        //this.setState({profileImg: reader.result})\r\n      }\r\n    }\r\n    reader.readAsDataURL(e.target.files[0])\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title=\"Patient\" breadcrumbItem=\"Admit Patient\" />\r\n\r\n        <Row>\r\n          <Col xl=\"8\">\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"card-title\"> Bio Information - Normal</h4>\r\n                <p className=\"card-title-desc\">\r\n                  Enter the information given below to admit the patient.\r\n                </p>\r\n\r\n \r\n                <AvForm className=\"needs-validation\">\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom01\">Patient Id</Label>\r\n                        <AvField\r\n                          name=\"firstname\"\r\n                          placeholder=\"First name\"\r\n                          onChange={(e) => setFirstname(e.target.value)}\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter First Name\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom01\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom02\">Last name</Label>\r\n                        <AvField\r\n                          name=\"lastname\"\r\n                          placeholder=\"Last name\"\r\n                          type=\"text\"\r\n                          onChange={(e) => setLastname(e.target.value)}\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom02\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom01\">\r\n                          CNIC -Govt Id\r\n                        </Label>\r\n                        <AvField\r\n                          name=\"firstname\"\r\n                          placeholder=\"*****-*******-*\"\r\n                          onChange={(e) => setCnic(e.target.value)}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom01\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom01\">Phone No.</Label>\r\n                        <AvField\r\n                          name=\"firstname\"\r\n                          onChange={(e) => setPhone(e.target.value)}\r\n                          placeholder=\"****-*******\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom01\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <AvField\r\n                          className=\"mb-3\"\r\n                          name=\"digits\"\r\n                          label=\"Room Number\"\r\n                          placeholder=\"21\"\r\n                          type=\"number\"\r\n                          onChange={(e) => setAge(e.target.value)}\r\n                          errorMessage=\"Enter Only Digits\"\r\n                          validate={{\r\n                            required: { value: true },\r\n                            pattern: {\r\n                              value: \"^[0-9]+$\",\r\n                              errorMessage: \"Only Digits\",\r\n                            },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>Gender</Label>\r\n                        <Select\r\n                          value={selectedGroup}\r\n                          onChange={setselectedGroup}\r\n                          options={optionGroup}\r\n                          classNamePrefix=\"select2-selection\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <FormGroup className=\"mb-4\">\r\n                        <Label>Date of Birth</Label>\r\n                        <InputGroup>\r\n                          <Flatpickr\r\n                            value={dob}\r\n                            onChange={setDob}\r\n                            className=\"form-control d-block\"\r\n                            placeholder=\"dd M,yyyy\"\r\n                            options={{\r\n                              mode: \"range\",\r\n                              dateFormat: \"Y-m-d\",\r\n                            }}\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <div className=\"form-check mb-3\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"\"\r\n                      id=\"invalidCheck\"\r\n                      required\r\n                    />{\" \"}\r\n                    <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                      Agree to terms and conditions\r\n                    </label>\r\n                    <div className=\"invalid-feedback\">\r\n                      You must agree before submitting.\r\n                    </div>\r\n                  </div>\r\n                  <Button onClick={handleSubmit} color=\"primary\" type=\"submit\">\r\n                    Register\r\n                  </Button>\r\n\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdmitPatient;\r\n"]},"metadata":{},"sourceType":"module"}